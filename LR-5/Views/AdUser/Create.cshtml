@model LR_5.Models.CreateUserViewModel

<style>
    body {
        font-family: Arial, sans-serif;
    }

    .container {
        max-width: 800px;
        margin: 0 auto;
    }

    .display-4 {
        color: #007bff;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            color: #fff;
        }
</style>

<h1 class="display-4">Добавить пользователя</h1>

<form asp-action="Create" method="post" class="container">
    <div class="form-group">
        <label asp-for="Username">Имя пользователя</label>
        <input asp-for="Username" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Password">Пароль</label>
        <input asp-for="Password" class="form-control" type="password" />
    </div>

    <div class="form-group">
        <label asp-for="Role">Роль</label>
        <select asp-for="Role" class="form-control" id="roleSelect">
            <option value="admin">Администратор</option>
            <option value="instruct">Инструктор</option>
            <option value="user">Пользователь</option>
            <option value="metod">Методист</option>
        </select>
    </div>

    <!-- Дополнительные поля для роли "Инструктор" -->
    <div class="form-group" id="instructorFields" style="display:none;">
        <label asp-for="InstructorId">Инструктор</label>
        <select asp-for="InstructorId" class="form-control">
            @foreach (var instructor in ViewBag.Instructors as List<Instruct>)
            {
                var fullName = $"{instructor.SurnameI} {instructor.NameI} {instructor.Otchestvo}";
                <option value="@instructor.InstId"
                        data-instructorname="@instructor.NameI"
                        data-instructorsurname="@instructor.SurnameI">
                    @fullName
                </option>
            }
        </select>

        <!-- Обновленные поля для отображения фамилии и имени -->
        <input asp-for="InstructorName" class="form-control" />
        <input asp-for="InstructorSurname" class="form-control" />
    </div>

    <div class="form-group" id="userFields" style="display:none;">
        <label asp-for="StudentId">Студент</label>
        <select asp-for="StudentId" class="form-control">
            @foreach (var student in ViewBag.Students as List<Stud>)
            {
                var fullName = $"{student.Surname} {student.NameS} {student.Otchestvo}";
                <option value="@student.StudId"
                        data-username="@student.NameS"
                        data-usersurname="@student.Surname">
                    @fullName
                </option>
            }
        </select>

        <!-- Обновленные поля для отображения фамилии и имени -->
        <input asp-for="UsName" class="form-control" />
        <input asp-for="UserSurname" class="form-control" />
    </div>

    <!-- Дополнительные поля для роли "Администратор" -->
    <div class="form-group" id="adminFields" style="display:none;">
        <label asp-for="AdminSurname">Фамилия</label>
        <input asp-for="AdminSurname" class="form-control" />

        <label asp-for="AdminName">Имя</label>
        <input asp-for="AdminName" class="form-control" />
    </div>
    <div class="form-group" id="MetFields" style="display:none;">
        <label asp-for="MetSurname">Фамилия</label>
        <input asp-for="MetSurname" class="form-control" />

        <label asp-for="MetName">Имя</label>
        <input asp-for="MetName" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Создать запись</button>
</form>
<script>
    document.getElementById('InstructorId').addEventListener('change', function () {
        console.log('Role selected:', this.value);
        var selectedOption = this.options[this.selectedIndex];
        var usnameInput = document.getElementById('InstructorName');
        var usersurnameInput = document.getElementById('InstructorSurname');

        if (selectedOption) {
            var usname = selectedOption.getAttribute('data-instructorname');
            var usersurname = selectedOption.getAttribute('data-instructorsurname');

            usnameInput.value = usname;
            usersurnameInput.value = usersurname;
        } else {
            usnameInput.value = '';
            usersurnameInput.value = '';
        }
    });
</script>
<script>
    document.getElementById('StudentId').addEventListener('change', function () {
        console.log('Role selected:', this.value);
        var selectedOption = this.options[this.selectedIndex];
        var usernameInput = document.getElementById('UsName');
        var usersurnameInput = document.getElementById('UserSurname');

        if (selectedOption) {
            var username = selectedOption.getAttribute('data-username');
            var usersurname = selectedOption.getAttribute('data-usersurname');

            usernameInput.value = username;
            usersurnameInput.value = usersurname;
        } else {
            usernameInput.value = '';
            usersurnameInput.value = '';
        }
    });
</script>
<script>
    // Сценарий JavaScript для отображения/скрытия дополнительных полей в зависимости от выбранной роли
    document.getElementById('roleSelect').addEventListener('change', function () {
        var instructorFields = document.getElementById('instructorFields');
        var adminFields = document.getElementById('adminFields');
        var userFields = document.getElementById('userFields');
        var MetFields = document.getElementById('MetFields');

        if (this.value === 'instruct') {
            instructorFields.style.display = 'block';
            adminFields.style.display = 'none';
            userFields.style.display = 'none';
            MetFields.style.display = 'none';
        } else if (this.value === 'admin') {
            instructorFields.style.display = 'none';
            adminFields.style.display = 'block';
            userFields.style.display = 'none';
            MetFields.style.display = 'none';
        } else if (this.value === 'user') {
            instructorFields.style.display = 'none';
            adminFields.style.display = 'none';
            userFields.style.display = 'block';
            MetFields.style.display = 'none';
        }
          else if (this.value === 'metod') {
                instructorFields.style.display = 'none';
                adminFields.style.display = 'none';
                userFields.style.display = 'none';
                MetFields.style.display = 'block';

        } else {
            instructorFields.style.display = 'none';
            adminFields.style.display = 'none';
            userFields.style.display = 'none';
            MetFields.style.display = 'none';
        }
    });
</script>